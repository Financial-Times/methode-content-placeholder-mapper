machine:
  environment:
    GODIST: "go1.7.3.linux-amd64.tar.gz"
  post:
    - mkdir -p download
    - test -e download/$GODIST || curl -o download/$GODIST https://storage.googleapis.com/golang/$GODIST
    - sudo rm -rf /usr/local/go
    - sudo tar -C /usr/local -xzf download/$GODIST
  services:
    - docker
dependencies:
  pre:
    - go get github.com/axw/gocov/gocov; go get github.com/matm/gocov-html; go get -u github.com/jstemmer/go-junit-report
test:
  pre:
    - go get github.com/mattn/goveralls
  override:
    - mkdir -p $CIRCLE_TEST_REPORTS/golang
    - go test -race -v ./... | go-junit-report > $CIRCLE_TEST_REPORTS/golang/junit.xml
    - go list ./... | grep -v vendor | awk -F/ '{print $4}' | xargs -I {} go test -v -cover -race -coverprofile=$CIRCLE_ARTIFACTS/{}.out ./{}
    - cd $CIRCLE_ARTIFACTS && sed -i '1d' *.out
    - |
      echo "mode: atomic" > $CIRCLE_ARTIFACTS/overall-coverage.result
    - cd $CIRCLE_ARTIFACTS && cat *.out >> overall-coverage.result
    - docker build --rm=false -t test/methode-content-placeholder-mapper .
    - docker run -d -p 9200:8080 test/methode-content-placeholder-mapper; sleep 3
    - curl --retry 10 --retry-delay 5 -v http://localhost:9200/__health
  post:
    - goveralls -coverprofile=$CIRCLE_ARTIFACTS/overall-coverage.result -service=circle-ci -repotoken=$COVERALLS_TOKEN
    - bash <(curl -s https://codecov.io/bash)